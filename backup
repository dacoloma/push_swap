void	ft_sort_stack(t_piles *pile)
{
	int	i;

	// if (ft_check_sort(pile))
	// 	return ;
	//
	// ft_print_piles(pile);
	ft_pb_min(pile);
	// ft_print_piles(pile);
	if (pile->i_max == 0)
	{
		ft_putstr("ra\n");
		ft_ra(pile);
	}
	i = pile->len_b;
	// printf("i = %d\n", pile->a[i]);
	// fflush(stdout);
	while (!ft_check_sort(pile) || pile->len_b != 0)
	{
		// DEBUG;
		if (ft_check_sort(pile))
		{
			while (pile->len_b > 0)
			{
				ft_putstr("pa\n");
				ft_pa(pile);
			}
		}
		while (i < pile->len && pile->a[i] < pile->a[i + 1]
			&& !ft_check_sort(pile))
		{
			ft_putstr("pb\n");
			ft_pb(pile);
			i = pile->len_b;
		}
		if (pile->len - pile->len_b > 1
			&& pile->a[i] > pile->a[i + 1])
		{
			ft_putstr("sa\n");
			ft_sa(pile);
		}
		if (ft_check_sort(pile))
		{
			while (pile->len_b > 0)
			{
				ft_putstr("pa\n");
				ft_pa(pile);
			}
		}
	}
}